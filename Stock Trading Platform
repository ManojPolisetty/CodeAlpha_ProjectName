import java.util.*;

class Stock {
    String symbol;
    String name;
    double price;

    Stock(String symbol, String name, double price) {
        this.symbol = symbol;
        this.name = name;
        this.price = price;
    }
}

class User {
    String username;
    double balance;
    Map<String, Integer> portfolio = new HashMap<>();

    User(String username, double balance) {
        this.username = username;
        this.balance = balance;
    }

    void buyStock(Stock stock, int quantity) {
        double cost = stock.price * quantity;
        if (balance >= cost) {
            balance -= cost;
            portfolio.put(stock.symbol, portfolio.getOrDefault(stock.symbol, 0) + quantity);
            System.out.println("‚úÖ Bought " + quantity + " shares of " + stock.symbol);
        } else {
            System.out.println("‚ùå Insufficient balance.");
        }
    }

    void sellStock(Stock stock, int quantity) {
        if (portfolio.getOrDefault(stock.symbol, 0) >= quantity) {
            balance += stock.price * quantity;
            portfolio.put(stock.symbol, portfolio.get(stock.symbol) - quantity);
            System.out.println("‚úÖ Sold " + quantity + " shares of " + stock.symbol);
        } else {
            System.out.println("‚ùå Not enough shares to sell.");
        }
    }

    void viewPortfolio(Map<String, Stock> market) {
        System.out.println("\nüìä Portfolio of " + username);
        System.out.println("Balance: ‚Çπ" + balance);
        if (portfolio.isEmpty()) {
            System.out.println("No stocks owned.");
            return;
        }

        for (String symbol : portfolio.keySet()) {
            int qty = portfolio.get(symbol);
            Stock stock = market.get(symbol);
            double value = qty * stock.price;
            System.out.println(symbol + " - Qty: " + qty + " | Price: ‚Çπ" + stock.price + " | Value: ‚Çπ" + value);
        }
    }
}

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        Map<String, Stock> market = new HashMap<>();
        market.put("TCS", new Stock("TCS", "Tata Consultancy Services", 3600.0));
        market.put("INFY", new Stock("INFY", "Infosys Ltd", 1450.0));
        market.put("RELI", new Stock("RELI", "Reliance Industries", 2850.0));
        market.put("HDFC", new Stock("HDFC", "HDFC Bank", 1700.0));

        System.out.print("Enter your name: ");
        String username = scanner.nextLine();
        User user = new User(username, 10000.0); // starting balance

        int choice;
        do {
            System.out.println("\nüìà --- Stock Trading Platform ---");
            System.out.println("1. View Market Data");
            System.out.println("2. Buy Stock");
            System.out.println("3. Sell Stock");
            System.out.println("4. View Portfolio");
            System.out.println("5. Exit");
            System.out.print("Choose an option: ");
            choice = scanner.nextInt();
            scanner.nextLine(); // consume newline

            switch (choice) {
                case 1:
                    System.out.println("\nüíπ Market Data:");
                    for (Stock s : market.values()) {
                        System.out.println(s.symbol + " - " + s.name + " - ‚Çπ" + s.price);
                    }
                    break;

                case 2:
                    System.out.print("Enter stock symbol to buy: ");
                    String buySymbol = scanner.nextLine().toUpperCase();
                    if (market.containsKey(buySymbol)) {
                        System.out.print("Enter quantity: ");
                        int qty = scanner.nextInt();
                        scanner.nextLine(); // consume newline
                        user.buyStock(market.get(buySymbol), qty);
                    } else {
                        System.out.println("‚ùå Invalid stock symbol.");
                    }
                    break;

                case 3:
                    System.out.print("Enter stock symbol to sell: ");
                    String sellSymbol = scanner.nextLine().toUpperCase();
                    if (market.containsKey(sellSymbol)) {
                        System.out.print("Enter quantity: ");
                        int qty = scanner.nextInt();
                        scanner.nextLine(); // consume newline
                        user.sellStock(market.get(sellSymbol), qty);
                    } else {
                        System.out.println("‚ùå Invalid stock symbol.");
                    }
                    break;

                case 4:
                    user.viewPortfolio(market);
                    break;

                case 5:
                    System.out.println("üëã Exiting the platform. Thank you!");
                    break;

                default:
                    System.out.println("‚ùå Invalid option. Try again.");
            }

        } while (choice != 5);

        scanner.close();
    }
}
